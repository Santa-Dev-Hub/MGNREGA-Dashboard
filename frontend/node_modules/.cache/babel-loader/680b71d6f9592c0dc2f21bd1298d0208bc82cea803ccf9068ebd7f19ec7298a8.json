{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\MGNREGA Performance Dashboard\\\\frontend\\\\src\\\\components\\\\ComparisonChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport '../styles/Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ComparisonChart({\n  districtData,\n  stateAverage,\n  language\n}) {\n  console.log('District Data:', districtData);\n  console.log('State Average:', stateAverage);\n\n  // Format large numbers for better readability\n  const formatNumber = num => {\n    if (!num) return 0;\n    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';\n    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';\n    return Math.round(num);\n  };\n  const comparisonData = [{\n    metric: language === 'en' ? 'Person Days' : 'व्यक्ति दिन',\n    'Your District': (districtData === null || districtData === void 0 ? void 0 : districtData.personDaysGenerated) || 0,\n    'State Average': (stateAverage === null || stateAverage === void 0 ? void 0 : stateAverage.avgPersonDaysGenerated) || 0\n  }, {\n    metric: language === 'en' ? 'Expenditure' : 'व्यय',\n    'Your District': (districtData === null || districtData === void 0 ? void 0 : districtData.expenditure) || 0,\n    'State Average': (stateAverage === null || stateAverage === void 0 ? void 0 : stateAverage.avgExpenditure) || 0\n  }, {\n    metric: language === 'en' ? 'Works Completed' : 'पूर्ण कार्य',\n    'Your District': (districtData === null || districtData === void 0 ? void 0 : districtData.worksCompleted) || 0,\n    'State Average': (stateAverage === null || stateAverage === void 0 ? void 0 : stateAverage.avgWorksCompleted) || 0\n  }];\n  console.log('Comparison Data:', comparisonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: comparisonData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"metric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formatNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => formatNumber(value),\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Your District\",\n          fill: \"#27ae60\",\n          barSize: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"State Average\",\n          fill: \"#e74c3c\",\n          barSize: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        color: '#666'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2713 Green = Your District | \\u2713 Red = State Average\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = ComparisonChart;\nexport default ComparisonChart;\nvar _c;\n$RefreshReg$(_c, \"ComparisonChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ComparisonChart","districtData","stateAverage","language","console","log","formatNumber","num","toFixed","Math","round","comparisonData","metric","personDaysGenerated","avgPersonDaysGenerated","expenditure","avgExpenditure","worksCompleted","avgWorksCompleted","className","children","width","height","data","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tickFormatter","formatter","value","contentStyle","backgroundColor","border","fill","barSize","style","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/MGNREGA Performance Dashboard/frontend/src/components/ComparisonChart.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport '../styles/Charts.css';\r\n\r\nfunction ComparisonChart({ districtData, stateAverage, language }) {\r\n  console.log('District Data:', districtData);\r\n  console.log('State Average:', stateAverage);\r\n\r\n  // Format large numbers for better readability\r\n  const formatNumber = (num) => {\r\n    if (!num) return 0;\r\n    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';\r\n    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';\r\n    return Math.round(num);\r\n  };\r\n\r\n  const comparisonData = [\r\n    {\r\n      metric: language === 'en' ? 'Person Days' : 'व्यक्ति दिन',\r\n      'Your District': districtData?.personDaysGenerated || 0,\r\n      'State Average': stateAverage?.avgPersonDaysGenerated || 0\r\n    },\r\n    {\r\n      metric: language === 'en' ? 'Expenditure' : 'व्यय',\r\n      'Your District': districtData?.expenditure || 0,\r\n      'State Average': stateAverage?.avgExpenditure || 0\r\n    },\r\n    {\r\n      metric: language === 'en' ? 'Works Completed' : 'पूर्ण कार्य',\r\n      'Your District': districtData?.worksCompleted || 0,\r\n      'State Average': stateAverage?.avgWorksCompleted || 0\r\n    }\r\n  ];\r\n\r\n  console.log('Comparison Data:', comparisonData);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <ResponsiveContainer width=\"100%\" height={350}>\r\n        <BarChart \r\n          data={comparisonData} \r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"metric\" />\r\n          <YAxis tickFormatter={formatNumber} />\r\n          <Tooltip \r\n            formatter={(value) => formatNumber(value)}\r\n            contentStyle={{ backgroundColor: '#fff', border: '1px solid #ccc' }}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"Your District\" fill=\"#27ae60\" barSize={40} />\r\n          <Bar dataKey=\"State Average\" fill=\"#e74c3c\" barSize={40} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n\r\n      <div style={{ marginTop: '10px', fontSize: '0.9em', color: '#666' }}>\r\n        <p>✓ Green = Your District | ✓ Red = State Average</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComparisonChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}