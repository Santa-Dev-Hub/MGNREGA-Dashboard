{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\MGNREGA Performance Dashboard\\\\frontend\\\\src\\\\components\\\\GeolocationHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/GeolocationHandler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeolocationHandler({\n  districts,\n  onSelectDistrict,\n  language\n}) {\n  _s();\n  const [locationStatus, setLocationStatus] = useState('idle');\n  const [detectedDistrict, setDetectedDistrict] = useState(null);\n  const handleGetLocation = () => {\n    setLocationStatus('loading');\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        console.log(`Location: ${latitude}, ${longitude}`);\n        setLocationStatus('success');\n      }, error => {\n        console.error('Geolocation error:', error);\n        setLocationStatus('error');\n      });\n    } else {\n      setLocationStatus('unsupported');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"geolocation-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: language === 'en' ? 'Auto-Detect Your District' : '‡§Ö‡§™‡§®‡•á ‡§ú‡§ø‡§≤‡•á ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§ø‡§§ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"geolocation-description\",\n      children: language === 'en' ? 'Let us find your district using your device location (optional)' : '‡§Ö‡§™‡§®‡•á ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§π‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡§æ ‡§ú‡§ø‡§≤‡§æ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§¶‡•á‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `geo-button status-${locationStatus}`,\n      onClick: handleGetLocation,\n      disabled: locationStatus === 'loading',\n      children: [locationStatus === 'idle' && 'üìç ' + (language === 'en' ? 'Find My District' : '‡§Æ‡•á‡§∞‡§æ ‡§ú‡§ø‡§≤‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç'), locationStatus === 'loading' && '‚è≥ ' + (language === 'en' ? 'Getting location...' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...'), locationStatus === 'success' && '‚úì ' + (language === 'en' ? 'Location found' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§Æ‡§ø‡§≤ ‡§ó‡§Ø‡§æ'), locationStatus === 'error' && '‚úó ' + (language === 'en' ? 'Could not detect location' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§™‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§≤‡§ó‡§æ ‡§∏‡§ï‡§§‡§æ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(GeolocationHandler, \"txm38ruVtw44bSuURBg7VaMZYfA=\");\n_c = GeolocationHandler;\nexport default GeolocationHandler;\nvar _c;\n$RefreshReg$(_c, \"GeolocationHandler\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GeolocationHandler","districts","onSelectDistrict","language","_s","locationStatus","setLocationStatus","detectedDistrict","setDetectedDistrict","handleGetLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/MGNREGA Performance Dashboard/frontend/src/components/GeolocationHandler.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/GeolocationHandler.css';\r\n\r\nfunction GeolocationHandler({ districts, onSelectDistrict, language }) {\r\n  const [locationStatus, setLocationStatus] = useState('idle');\r\n  const [detectedDistrict, setDetectedDistrict] = useState(null);\r\n\r\n  const handleGetLocation = () => {\r\n    setLocationStatus('loading');\r\n    \r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          console.log(`Location: ${latitude}, ${longitude}`);\r\n          setLocationStatus('success');\r\n        },\r\n        (error) => {\r\n          console.error('Geolocation error:', error);\r\n          setLocationStatus('error');\r\n        }\r\n      );\r\n    } else {\r\n      setLocationStatus('unsupported');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"geolocation-section\">\r\n      <h2>{language === 'en' ? 'Auto-Detect Your District' : '‡§Ö‡§™‡§®‡•á ‡§ú‡§ø‡§≤‡•á ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§ø‡§§ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç'}</h2>\r\n      <p className=\"geolocation-description\">\r\n        {language === 'en' \r\n          ? 'Let us find your district using your device location (optional)'\r\n          : '‡§Ö‡§™‡§®‡•á ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§π‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡§æ ‡§ú‡§ø‡§≤‡§æ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§¶‡•á‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)'}\r\n      </p>\r\n      \r\n      <button \r\n        className={`geo-button status-${locationStatus}`}\r\n        onClick={handleGetLocation}\r\n        disabled={locationStatus === 'loading'}\r\n      >\r\n        {locationStatus === 'idle' && 'üìç ' + (language === 'en' ? 'Find My District' : '‡§Æ‡•á‡§∞‡§æ ‡§ú‡§ø‡§≤‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç')}\r\n        {locationStatus === 'loading' && '‚è≥ ' + (language === 'en' ? 'Getting location...' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...')}\r\n        {locationStatus === 'success' && '‚úì ' + (language === 'en' ? 'Location found' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§Æ‡§ø‡§≤ ‡§ó‡§Ø‡§æ')}\r\n        {locationStatus === 'error' && '‚úó ' + (language === 'en' ? 'Could not detect location' : '‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§™‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§≤‡§ó‡§æ ‡§∏‡§ï‡§§‡§æ')}\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GeolocationHandler;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,kBAAkBA,CAAC;EAAEC,SAAS;EAAEC,gBAAgB;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAC5D,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,iBAAiB,CAAC,SAAS,CAAC;IAE5B,IAAII,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CC,OAAO,CAACC,GAAG,CAAC,aAAaJ,QAAQ,KAAKC,SAAS,EAAE,CAAC;QAClDT,iBAAiB,CAAC,SAAS,CAAC;MAC9B,CAAC,EACAa,KAAK,IAAK;QACTF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1Cb,iBAAiB,CAAC,OAAO,CAAC;MAC5B,CACF,CAAC;IACH,CAAC,MAAM;MACLA,iBAAiB,CAAC,aAAa,CAAC;IAClC;EACF,CAAC;EAED,oBACEP,OAAA;IAASqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACtCtB,OAAA;MAAAsB,QAAA,EAAKlB,QAAQ,KAAK,IAAI,GAAG,2BAA2B,GAAG;IAAiC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9F1B,OAAA;MAAGqB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACnClB,QAAQ,KAAK,IAAI,GACd,iEAAiE,GACjE;IAAqE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eAEJ1B,OAAA;MACEqB,SAAS,EAAE,qBAAqBf,cAAc,EAAG;MACjDqB,OAAO,EAAEjB,iBAAkB;MAC3BkB,QAAQ,EAAEtB,cAAc,KAAK,SAAU;MAAAgB,QAAA,GAEtChB,cAAc,KAAK,MAAM,IAAI,KAAK,IAAIF,QAAQ,KAAK,IAAI,GAAG,kBAAkB,GAAG,iBAAiB,CAAC,EACjGE,cAAc,KAAK,SAAS,IAAI,IAAI,IAAIF,QAAQ,KAAK,IAAI,GAAG,qBAAqB,GAAG,6BAA6B,CAAC,EAClHE,cAAc,KAAK,SAAS,IAAI,IAAI,IAAIF,QAAQ,KAAK,IAAI,GAAG,gBAAgB,GAAG,eAAe,CAAC,EAC/FE,cAAc,KAAK,OAAO,IAAI,IAAI,IAAIF,QAAQ,KAAK,IAAI,GAAG,2BAA2B,GAAG,4BAA4B,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd;AAACrB,EAAA,CA7CQJ,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AA+C3B,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}