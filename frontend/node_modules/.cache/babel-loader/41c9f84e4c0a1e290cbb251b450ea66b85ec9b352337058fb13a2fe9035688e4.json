{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\MGNREGA Performance Dashboard\\\\frontend\\\\src\\\\components\\\\TrendChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport '../styles/Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrendChart({\n  data,\n  language\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No historical data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Sort by date and format for display\n  const sortedData = [...data].sort((a, b) => {\n    const dateA = new Date(a.year, parseInt(a.month.split('-')[1]) - 1);\n    const dateB = new Date(b.year, parseInt(b.month.split('-')[1]) - 1);\n    return dateA - dateB;\n  }).map(d => ({\n    month: d.month,\n    'Person Days': d.personDaysGenerated || 0,\n    'Active Workers': d.activeWorkers || 0,\n    'Works Completed': d.worksCompleted || 0\n  }));\n\n  // Format large numbers\n  const formatNumber = num => {\n    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';\n    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';\n    return num;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: sortedData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formatNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => formatNumber(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Person Days\",\n          stroke: \"#3498db\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#3498db',\n            r: 4\n          },\n          activeDot: {\n            r: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Active Workers\",\n          stroke: \"#27ae60\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#27ae60',\n            r: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Works Completed\",\n          stroke: \"#e74c3c\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#e74c3c',\n            r: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = TrendChart;\nexport default TrendChart;\nvar _c;\n$RefreshReg$(_c, \"TrendChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","TrendChart","data","language","length","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedData","sort","a","b","dateA","Date","year","parseInt","month","split","dateB","map","d","personDaysGenerated","activeWorkers","worksCompleted","formatNumber","num","toFixed","className","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","formatter","value","type","stroke","strokeWidth","dot","fill","r","activeDot","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/MGNREGA Performance Dashboard/frontend/src/components/TrendChart.js"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\nimport '../styles/Charts.css';\r\n\r\nfunction TrendChart({ data, language }) {\r\n  if (!data || data.length === 0) {\r\n    return <p>No historical data available</p>;\r\n  }\r\n\r\n  // Sort by date and format for display\r\n  const sortedData = [...data]\r\n    .sort((a, b) => {\r\n      const dateA = new Date(a.year, parseInt(a.month.split('-')[1]) - 1);\r\n      const dateB = new Date(b.year, parseInt(b.month.split('-')[1]) - 1);\r\n      return dateA - dateB;\r\n    })\r\n    .map(d => ({\r\n      month: d.month,\r\n      'Person Days': d.personDaysGenerated || 0,\r\n      'Active Workers': d.activeWorkers || 0,\r\n      'Works Completed': d.worksCompleted || 0\r\n    }));\r\n\r\n  // Format large numbers\r\n  const formatNumber = (num) => {\r\n    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';\r\n    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';\r\n    return num;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <ResponsiveContainer width=\"100%\" height={350}>\r\n        <LineChart data={sortedData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"month\" />\r\n          <YAxis tickFormatter={formatNumber} />\r\n          <Tooltip formatter={(value) => formatNumber(value)} />\r\n          <Legend />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"Person Days\" \r\n            stroke=\"#3498db\" \r\n            strokeWidth={2}\r\n            dot={{ fill: '#3498db', r: 4 }}\r\n            activeDot={{ r: 6 }}\r\n          />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"Active Workers\" \r\n            stroke=\"#27ae60\" \r\n            strokeWidth={2}\r\n            dot={{ fill: '#27ae60', r: 4 }}\r\n          />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"Works Completed\" \r\n            stroke=\"#e74c3c\" \r\n            strokeWidth={2}\r\n            dot={{ fill: '#e74c3c', r: 4 }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrendChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}