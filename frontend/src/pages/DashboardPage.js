import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import axios from 'axios';
import PerformanceCards from '../components/PerformanceCards';
import TrendChart from '../components/TrendChart';
import ComparisonChart from '../components/ComparisonChart';
import '../styles/DashboardPage.css';

function DashboardPage() {
  const location = useLocation();
  const navigate = useNavigate();
  const district = location.state?.district;
  
  const [data, setData] = useState(null);
  const [historicalData, setHistoricalData] = useState([]);
  const [stateAverage, setStateAverage] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [language, setLanguage] = useState('en');

  const fetchData = async () => {
    try {
      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';
      
      console.log('Fetching data for district:', district.districtCode);
      console.log('API URL:', API_URL);
      
      const [latestRes, historyRes, stateRes] = await Promise.all([
        axios.get(`${API_URL}/api/data/district/${district.districtCode}`),
        axios.get(`${API_URL}/api/data/district/${district.districtCode}/history?months=12`),
        axios.get(`${API_URL}/api/data/state/averages`)
      ]);

      console.log('Latest data:', latestRes.data);
      console.log('Historical data:', historyRes.data);
      console.log('State average:', stateRes.data);

      setData(latestRes.data.data || latestRes.data);
      setHistoricalData(historyRes.data.data || historyRes.data || []);
      setStateAverage(stateRes.data.data || stateRes.data || {});
      setLoading(false);
      setError(null);
    } catch (err) {
      console.error('Failed to fetch data:', err.message);
      console.error('Error details:', err);
      setError(err.message);
      setLoading(false);
    }
  };

  useEffect(() => {
    if (!district) {
      navigate('/');
      return;
    }
    
    fetchData();
  }, [district, navigate]);

  const toggleLanguage = () => {
    setLanguage(language === 'en' ? 'hi' : 'en');
  };

  if (loading) {
    return <div className="loading-page">Loading performance data...</div>;
  }

  if (error) {
    return (
      <div className="error-page">
        <h2>Error Loading Data</h2>
        <p>{error}</p>
        <p>Make sure:</p>
        <ul>
          <li>Backend is running (npm run dev in backend folder)</li>
          <li>MongoDB is connected</li>
          <li>Data is seeded (npm run seed)</li>
        </ul>
        <button onClick={() => navigate('/')}>тЖР Go Back</button>
      </div>
    );
  }

  if (!data) {
    return <div className="error-page">Unable to load data. Please try again.</div>;
  }

  return (
    <div className="dashboard-page">
      <header className="dashboard-header">
        <button className="back-button" onClick={() => navigate('/')}>тЖР Back</button>
        <h1>{district.districtName}</h1>
        <button className="lang-toggle" onClick={toggleLanguage}>
          {language === 'en' ? 'рд╣рд┐рдВрджреА' : 'English'}
        </button>
      </header>

      <main className="dashboard-content">
        <section className="kpi-section">
          <h2>{language === 'en' ? 'Key Performance Indicators' : 'рдореБрдЦреНрдп рдкреНрд░рджрд░реНрд╢рди рд╕рдВрдХреЗрддрдХ'}</h2>
          <PerformanceCards data={data} language={language} />
        </section>

        <section className="trend-section">
          <h2>{language === 'en' ? 'Performance Trend (Last 12 Months)' : 'рдкреНрд░рджрд░реНрд╢рди рдкреНрд░рд╡реГрддреНрддрд┐ (рдкрд┐рдЫрд▓реЗ 12 рдорд╣реАрдиреЗ)'}</h2>
          <TrendChart data={historicalData} language={language} />
        </section>

        <section className="comparison-section">
          <h2>{language === 'en' ? 'How Your District Compares' : 'рдЖрдкрдХрд╛ рдЬрд┐рд▓рд╛ рд░рд╛рдЬреНрдп рдФрд╕рдд рд╕реЗ рдХреИрд╕реЗ рддреБрд▓рдирд╛ рдХрд░рддрд╛ рд╣реИ'}</h2>
          <ComparisonChart 
            districtData={data} 
            stateAverage={stateAverage}
            language={language}
          />
        </section>

        <section className="insights-section">
          <h2>{language === 'en' ? 'What Does This Mean?' : 'рдЗрд╕рдХрд╛ рдХреНрдпрд╛ рдорддрд▓рдм рд╣реИ?'}</h2>
          <div className="insights-cards">
            <div className="insight-card">
              <h3>ЁЯУК {language === 'en' ? 'Employment Days' : 'рд░реЛрдЬрд╝рдЧрд╛рд░ рджрд┐рди'}</h3>
              <p>{language === 'en' 
                ? 'More person days = more people got work. The goal is 100 days per household.'
                : 'рдЕрдзрд┐рдХ рд╡реНрдпрдХреНрддрд┐ рджрд┐рди = рдЕрдзрд┐рдХ рд▓реЛрдЧреЛрдВ рдХреЛ рдХрд╛рдо рдорд┐рд▓рд╛ред рд▓рдХреНрд╖реНрдп рдкреНрд░рддрд┐ рдкрд░рд┐рд╡рд╛рд░ 100 рджрд┐рди рд╣реИред'}</p>
            </div>

            <div className="insight-card">
              <h3>ЁЯТ░ {language === 'en' ? 'Funds Utilization' : 'рдзрди рдЙрдкрдпреЛрдЧ'}</h3>
              <p>{language === 'en'
                ? 'Shows how much of the allocated money was actually spent. Higher = better.'
                : 'рджрд┐рдП рдЧрдП рдкреИрд╕реЗ рдХрд╛ рдХрд┐рддрдирд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рд╣реБрдЖ рдпрд╣ рджрд┐рдЦрд╛рддрд╛ рд╣реИред рдЕрдзрд┐рдХ = рдмреЗрд╣рддрд░ред'}</p>
            </div>

            <div className="insight-card">
              <h3>ЁЯСй {language === 'en' ? 'Women Participation' : 'рдорд╣рд┐рд▓рд╛рдУрдВ рдХреА рднрд╛рдЧреАрджрд╛рд░реА'}</h3>
              <p>{language === 'en'
                ? 'Percentage of women who got work. Program aims for women empowerment.'
                : 'рдХрд╛рдо рдкрд╛рдиреЗ рд╡рд╛рд▓реА рдорд╣рд┐рд▓рд╛рдУрдВ рдХрд╛ рдкреНрд░рддрд┐рд╢рддред рдХрд╛рд░реНрдпрдХреНрд░рдо рдорд╣рд┐рд▓рд╛ рд╕рд╢рдХреНрддрд┐рдХрд░рдг рдХрд╛ рд▓рдХреНрд╖реНрдп рд░рдЦрддрд╛ рд╣реИред'}</p>
            </div>

            <div className="insight-card">
              <h3>ЁЯПЧя╕П {language === 'en' ? 'Works Completed' : 'рдкреВрд░реЗ рдХрд┐рдП рдЧрдП рдХрд╛рдо'}</h3>
              <p>{language === 'en'
                ? 'Number of projects completed. These create lasting assets for the community.'
                : 'рдкреВрд░реА рдХреА рдЧрдИ рдкрд░рд┐рдпреЛрдЬрдирд╛рдУрдВ рдХреА рд╕рдВрдЦреНрдпрд╛ред рдпреЗ рд╕рдореБрджрд╛рдп рдХреЗ рд▓рд┐рдП рд╕реНрдерд╛рдпреА рд╕рдВрдкрддреНрддрд┐ рдмрдирд╛рддреЗ рд╣реИрдВред'}</p>
            </div>
          </div>
        </section>
      </main>

      <footer className="dashboard-footer">
        <p>Data source: nrega.nic.in | Last updated: {new Date().toLocaleDateString()}</p>
      </footer>
    </div>
  );
}

export default DashboardPage;
